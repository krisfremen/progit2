[[_getting_a_repo]]
=== Добивање складиште за Git

Обично добивате репозиториум на Git на еден од два начина:

1. Можете да преземете локален директориум кој моментално не е под контрола на верзијата, и да го претворите во репозиториум Git, или
2. Можете да _clone_ постоечки репозиториум Git од друго место.

Во секој случај, ќе завршиш со репозиториум Git на вашата локална машина, подготвен за работа.

==== Иницијализирање на складиште во постоечки директориум

Ако имате директориум на проект кој во моментов не е под контрола на верзијата и сакате да го стартувате контролирањето со Git, прво треба да отидете во директориумот на тој проект.
Ако никогаш не сте го направиле тоа, изгледа малку поинаку, во зависност од кој систем работи:

за Linux:
[source,console]
----
$ cd /home/user/my_project
----
за Mac:
[source,console]
----
$ cd /Users/user/my_project
----
за Windows:
[source,console]
----
$ cd /c/user/my_project
----

и напишете:

[source,console]
----
$ git init
----

Ова создава нов поддиректориум наречен `.git` кој ги содржи сите ваши неопходни датотеки за складиште - скелет на Git складиште.
Во овој момент, ништо во вашиот проект не е следено.
(Види <<ch10-git-internals#ch10-git-internals>> за повеќе информации за точното што датотеките се содржани во директориумот `.git` што само што сте го создале.)

Ако сакате да ја стартувате верзијата со контролирање на постоечките датотеки (за разлика од празен директориум), најверојатно треба да започнете со следење на тие датотеки и да направите почетна обврска.
Ова може да го постигнете со неколку команди за `git add` кои ги специфицираат датотеките што сакате да ги следите, а потоа следи `git commit`:

[source,console]
----
$ git add *.c
$ git add LICENSE
$ git commit -m 'initial project version'
----

Ќе поминеме што прават овие команди за само една минута.
Во овој момент, имате репозиториум Git со следени датотеки и почетна обврска.

[[_git_cloning]]
==== Клонирање на постоечки складиште

Ако сакате да добиете копија од постоечкото складиште на Git - на пример, проект што би сакале да придонесете - командата што ви треба е `git clone`.
Ако сте запознаени со други VCS системи како што е Subversion, ќе забележите дека командата е "клон", а не "исход".
Ова е важна разлика - наместо да се добие само работна копија, Git добива целосна копија од речиси сите податоци што ги има серверот.
Секоја верзија на секоја датотека за историјата на проектот се повлекува по дифолт кога работи 'git clone`.
Всушност, ако вашиот серверски диск е оштетен, често може да го користите речиси секој од клоновите на кој било клиент за да го поставите серверот назад во состојбата во која беше клинички (може да изгубите некои куки од серверот и слично, но сите верзии на податоци ќе бидат таму - видете <<ch04-git-on-the-server#_getting_git_on_a_server>> за повеќе детали).

Клонирате складиште со `git clone <url>`. (((Команди на git, клон)))
На пример, ако сакате да ја клонирате библиотеката со поврзување со Git наречена `libgit2`, можете да го направите вака:

[source,console]
----
$ git clone https://github.com/libgit2/libgit2
----

Тоа создава директориум наречен `libgit2`, иницијализира директориум` .git` во него, ги симнува сите податоци за тоа складиште и проверува работна копија од најновата верзија.
Ако влезете во новиот `libgit2` директориум кој е само создаден, ќе ги видите проектните датотеки таму, подготвени да бидат вклучени или користени.

Ако сакате да го клонирате складиштето во директориумот наречен нешто друго освен `libgit2`, можете да го одредите како следната опција на командната линија:

[source,console]
----
$ git clone https://github.com/libgit2/libgit2 mylibgit
----

Оваа команда го прави истото како и претходната, но целниот директориум се нарекува `mylibgit`.

Git има голем број на различни протоколи за пренос што можете да ги користите.
Претходниот пример го користи протоколот `https: //`, но може да видите и `git: //` или `user @ server: path / to / repo.git`, кој го користи SSH-протоколот за пренос.
<<ch04-git-on-the-server#_getting_git_on_a_server>> ќе ги воведат сите достапни опции кои серверот може да ги постави за да пристапи до вашиот Git складиште и предностите и негативностите на секоја од нив.
